{"version":3,"sources":["GoogleSigninButton.tsx"],"names":["RNGoogleSignin","NativeModules","GoogleSigninButton","onPress","style","rest","Platform","OS","clickListener","DeviceEventEmitter","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","StyleSheet","create","width","height"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAUA,MAAMA,cAAuC,GAAGC,2BAAcD,cAA9D;;AAEO,MAAME,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkB,KAAGC;AAArB,CAAD,KAA0D;AAC1F,wBAAU,MAAM;AACd,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB;AACD;;AACD,UAAMC,aAAa,GAAGC,gCAAmBC,WAAnB,CAA+B,6BAA/B,EAA8D,MAAM;AACxFP,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,KAFqB,CAAtB;;AAGA,WAAO,MAAM;AACXK,MAAAA,aAAa,CAACG,MAAd;AACD,KAFD;AAGD,GAVD,EAUG,CAACR,OAAD,CAVH;;AAYA,QAAMS,eAAe,GAAG,CAAC,MAAM;AAC7B,YAAQP,IAAI,CAACQ,IAAb;AACE,WAAKb,cAAc,CAACc,gBAApB;AACE,eAAOC,MAAM,CAACC,QAAd;;AACF,WAAKhB,cAAc,CAACiB,gBAApB;AACE,eAAOF,MAAM,CAACG,QAAd;;AACF;AACE,eAAOH,MAAM,CAACI,YAAd;AANJ;AAQD,GATuB,GAAxB,CAb0F,CAwB1F;;;AACA,sBAAO,6BAAC,yCAAD,eAA0Bd,IAA1B;AAAgC,IAAA,OAAO,EAAEF,OAAzC;AAAkD,IAAA,KAAK,EAAE,CAACS,eAAD,EAAkBR,KAAlB;AAAzD,KAAP;AACD,CA1BM;;;AA4BPF,kBAAkB,CAACkB,IAAnB,GAA0B;AACxBC,EAAAA,IAAI,EAAErB,cAAc,CAACc,gBADG;AAExBQ,EAAAA,QAAQ,EAAEtB,cAAc,CAACuB,oBAFD;AAGxBC,EAAAA,IAAI,EAAExB,cAAc,CAACiB;AAHG,CAA1B;AAMAf,kBAAkB,CAACuB,KAAnB,GAA2B;AACzBC,EAAAA,IAAI,EAAE1B,cAAc,CAAC2B,iBADI;AAEzBC,EAAAA,KAAK,EAAE5B,cAAc,CAAC6B;AAFG,CAA3B,C,CAKA;;AACA,MAAMd,MAAM,GAAGe,wBAAWC,MAAX,CAAkB;AAC/Bf,EAAAA,QAAQ,EAAE;AACRgB,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GADqB;AAK/Bd,EAAAA,YAAY,EAAE;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALiB;AAM/Bf,EAAAA,QAAQ,EAAE;AAAEc,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AANqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]}