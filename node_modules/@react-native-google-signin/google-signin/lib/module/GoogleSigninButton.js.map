{"version":3,"sources":["GoogleSigninButton.tsx"],"names":["React","useEffect","NativeModules","Platform","DeviceEventEmitter","StyleSheet","RNGoogleSigninButton","RNGoogleSignin","GoogleSigninButton","onPress","style","rest","OS","clickListener","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","create","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,kBAAlC,EAAsDC,UAAtD,QAAwE,cAAxE;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAUA,MAAMC,cAAuC,GAAGL,aAAa,CAACK,cAA9D;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkB,KAAGC;AAArB,CAAD,KAA0D;AAC1FV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,QAAQ,CAACS,EAAT,KAAgB,KAApB,EAA2B;AACzB;AACD;;AACD,UAAMC,aAAa,GAAGT,kBAAkB,CAACU,WAAnB,CAA+B,6BAA/B,EAA8D,MAAM;AACxFL,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,KAFqB,CAAtB;AAGA,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACE,MAAd;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,OAAD,CAVM,CAAT;;AAYA,QAAMO,eAAe,GAAG,CAAC,MAAM;AAC7B,YAAQL,IAAI,CAACM,IAAb;AACE,WAAKV,cAAc,CAACW,gBAApB;AACE,eAAOC,MAAM,CAACC,QAAd;;AACF,WAAKb,cAAc,CAACc,gBAApB;AACE,eAAOF,MAAM,CAACG,QAAd;;AACF;AACE,eAAOH,MAAM,CAACI,YAAd;AANJ;AAQD,GATuB,GAAxB,CAb0F,CAwB1F;;;AACA,sBAAO,oBAAC,oBAAD,eAA0BZ,IAA1B;AAAgC,IAAA,OAAO,EAAEF,OAAzC;AAAkD,IAAA,KAAK,EAAE,CAACO,eAAD,EAAkBN,KAAlB;AAAzD,KAAP;AACD,CA1BM;AA4BPF,kBAAkB,CAACgB,IAAnB,GAA0B;AACxBC,EAAAA,IAAI,EAAElB,cAAc,CAACW,gBADG;AAExBQ,EAAAA,QAAQ,EAAEnB,cAAc,CAACoB,oBAFD;AAGxBC,EAAAA,IAAI,EAAErB,cAAc,CAACc;AAHG,CAA1B;AAMAb,kBAAkB,CAACqB,KAAnB,GAA2B;AACzBC,EAAAA,IAAI,EAAEvB,cAAc,CAACwB,iBADI;AAEzBC,EAAAA,KAAK,EAAEzB,cAAc,CAAC0B;AAFG,CAA3B,C,CAKA;;AACA,MAAMd,MAAM,GAAGd,UAAU,CAAC6B,MAAX,CAAkB;AAC/Bd,EAAAA,QAAQ,EAAE;AACRe,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GADqB;AAK/Bb,EAAAA,YAAY,EAAE;AAAEY,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALiB;AAM/Bd,EAAAA,QAAQ,EAAE;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AANqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]}